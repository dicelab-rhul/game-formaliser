 
:- discontiguous initial/1.
:- discontiguous initially/2.
:- discontiguous final/1.
:- discontiguous legal/2.
:- discontiguous possible/2.
:- discontiguous effect/3.
:- discontiguous abnormal/3.
:- discontiguous finally/2.
:- discontiguous payoffCM/6.

% Payoff matrix for Campaign Managers (CM)
payoffCM('Grand Conference Hall', 'Grand Conference Hall', 2, 1).
payoffCM('Tech Innovation Center', 'Tech Innovation Center', 1, 2).
payoffCM('Grand Conference Hall', 'Tech Innovation Center', 0, 0).
payoffCM('Tech Innovation Center', 'Grand Conference Hall', 0, 0).

% Initial state
initial(s0).

% What holds initially: who is a player, their role, and whether they can play.    
initially(player(m1), s0).
initially(player(m2), s0).
initially(role(m1, hall_advocate), s0).
initially(role(m2, tech_advocate), s0).
initially(control(m1), s0).
initially(control(m2), s0).

% When a state is final: no need to check content as it is generated by game/2,
% implying it is a legal state.
final(do(choice(_M2, _Loc2), do(choice(_M1, _Loc1), S))):- initial(S).

% A legal move is a possible move where the player has control (is its turn).
legal(choice(M, Loc), S):- possible(choice(M, Loc), S), holds(control(M), S).

% What is possible for a player to choose
possible(choice(M, 'Grand Conference Hall'), S):- holds(player(M), S).
possible(choice(M, 'Tech Innovation Center'), S):- holds(player(M), S).

% The effects of a move: if M has chosen Loc, then in the next state this
% is what they did.
effect(did(M, Loc), choice(M, Loc), _S).

% The effects of a move: once a choice is made, the player loses control, i.e.
% cannot move anymore.
abnormal(control(M), choice(M, _Loc), _S).

% What holds finally: the outcome with players, Locations, and Utilities.
finally(outcome(M1, Loc1, U1, M2, Loc2, U2), S):-
    final(S),
    holds(role(M1, hall_advocate), S),    
    holds(did(M1, Loc1), S),    
    holds(role(M2, tech_advocate), S),    
    holds(did(M2, Loc2), S),
    payoffCM(Loc1, Loc2, U1, U2).

% Goals achieved by the players.
finally(goal(M1, U1), S):-
    finally(outcome(M1, _, U1, _, _, _), S).
finally(goal(M2, U2), S):-
    finally(outcome(_, _, _, M2, _, U2), S).
